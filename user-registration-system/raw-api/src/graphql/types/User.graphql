type User {
  id: UUID!
  username: String!
  password: String!
  email: String!
  privilege: String!
  active: Boolean!
  createAt: Datetime!
  updatedAt: Datetime!
}

type Query {
  getUsers: [User!]
  getUserData(at: String!): User!
}

type Mutation {
  createUser(input: CreateUserInput): User!
  login(input: LoginInput): AuthPayload!
}

type AuthPayload {
  token: String!
}

input CreateUserInput {
  username: String!
  password: String!
  email: String!
  privilege: String!
  active: Boolean!
}

input LoginInput {
  email: String!
  password: String!
}
